// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer/signed_cc_dep_spec.proto

package peer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SignedChaincodeDeploymentSpec carries the CDS along with endorsements
type SignedChaincodeDeploymentSpec struct {
	// This is the bytes of the ChaincodeDeploymentSpec
	ChaincodeDeploymentSpec []byte `protobuf:"bytes,1,opt,name=chaincode_deployment_spec,json=chaincodeDeploymentSpec,proto3" json:"chaincode_deployment_spec,omitempty"`
	// This is the instantiation policy which is identical in structure
	// to endorsement policy.  This policy is checked by the VSCC at commit
	// time on the instantiation (all peers will get the same policy as it
	// will be part of the LSCC instantation record and will be part of the
	// hash as well)
	InstantiationPolicy []byte `protobuf:"bytes,2,opt,name=instantiation_policy,json=instantiationPolicy,proto3" json:"instantiation_policy,omitempty"`
	// The endorsements of the above deployment spec, the owner's signature over
	// chaincode_deployment_spec and Endorsement.endorser.
	OwnerEndorsements []*Endorsement `protobuf:"bytes,3,rep,name=owner_endorsements,json=ownerEndorsements" json:"owner_endorsements,omitempty"`
}

func (m *SignedChaincodeDeploymentSpec) Reset()                    { *m = SignedChaincodeDeploymentSpec{} }
func (m *SignedChaincodeDeploymentSpec) String() string            { return proto.CompactTextString(m) }
func (*SignedChaincodeDeploymentSpec) ProtoMessage()               {}
func (*SignedChaincodeDeploymentSpec) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *SignedChaincodeDeploymentSpec) GetChaincodeDeploymentSpec() []byte {
	if m != nil {
		return m.ChaincodeDeploymentSpec
	}
	return nil
}

func (m *SignedChaincodeDeploymentSpec) GetInstantiationPolicy() []byte {
	if m != nil {
		return m.InstantiationPolicy
	}
	return nil
}

func (m *SignedChaincodeDeploymentSpec) GetOwnerEndorsements() []*Endorsement {
	if m != nil {
		return m.OwnerEndorsements
	}
	return nil
}

func init() {
	proto.RegisterType((*SignedChaincodeDeploymentSpec)(nil), "protos.SignedChaincodeDeploymentSpec")
}

func init() { proto.RegisterFile("peer/signed_cc_dep_spec.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x89, 0x05, 0x0f, 0xab, 0x17, 0x53, 0xc1, 0x28, 0x16, 0xaa, 0xa7, 0x9c, 0x12, 0xd4,
	0x9b, 0xc7, 0xaa, 0x47, 0x41, 0xda, 0x9b, 0x97, 0x25, 0x9d, 0x0c, 0xe9, 0x62, 0x3a, 0x33, 0xec,
	0xac, 0x48, 0x5f, 0xd3, 0x27, 0x92, 0xec, 0xb6, 0x44, 0x0f, 0x9e, 0x76, 0xd8, 0xef, 0xfb, 0x67,
	0x86, 0x31, 0x33, 0x41, 0xf4, 0xb5, 0xba, 0x8e, 0xb0, 0xb5, 0x00, 0xb6, 0x45, 0xb1, 0x2a, 0x08,
	0x95, 0x78, 0x0e, 0x9c, 0x1f, 0xc7, 0x47, 0xaf, 0xae, 0xa3, 0x26, 0x9e, 0x85, 0xb5, 0xe9, 0xad,
	0x47, 0x15, 0x26, 0xc5, 0x64, 0xdd, 0x7e, 0x67, 0x66, 0xb6, 0x8a, 0x2d, 0x9e, 0x36, 0x8d, 0x23,
	0xe0, 0x16, 0x9f, 0x51, 0x7a, 0xde, 0x6d, 0x91, 0xc2, 0x4a, 0x10, 0xf2, 0x47, 0x73, 0x09, 0x07,
	0x34, 0xcc, 0xd8, 0xb3, 0x38, 0xaa, 0xc8, 0xe6, 0x59, 0x79, 0xba, 0xbc, 0x80, 0x7f, 0xb2, 0x77,
	0xe6, 0xdc, 0x91, 0x86, 0x86, 0x82, 0x6b, 0x82, 0x63, 0xb2, 0xc2, 0xbd, 0x83, 0x5d, 0x71, 0x14,
	0x63, 0xd3, 0x3f, 0xec, 0x2d, 0xa2, 0x7c, 0x61, 0x72, 0xfe, 0x22, 0xf4, 0x16, 0xa9, 0x65, 0xaf,
	0x38, 0xf4, 0xd2, 0x62, 0x32, 0x9f, 0x94, 0x27, 0xf7, 0xd3, 0xb4, 0xb4, 0x56, 0x2f, 0x23, 0x5b,
	0x9e, 0x45, 0xfd, 0xd7, 0x8f, 0x2e, 0x5e, 0xcd, 0x0d, 0xfb, 0xae, 0x72, 0xf4, 0x11, 0x17, 0x1b,
	0x8b, 0x7d, 0x7c, 0xb8, 0xc8, 0x7b, 0xd9, 0xb9, 0xb0, 0xf9, 0x5c, 0x57, 0xc0, 0xdb, 0xfa, 0x20,
	0x8c, 0x45, 0x32, 0xeb, 0xc1, 0x5c, 0xa7, 0x4b, 0x3e, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x43,
	0xfe, 0x25, 0x9a, 0x71, 0x01, 0x00, 0x00,
}
